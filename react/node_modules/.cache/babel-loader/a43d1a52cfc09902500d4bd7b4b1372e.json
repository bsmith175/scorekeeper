{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/Leaderboard.jsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { H2, ScrollBox, ThinBorder } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = '200'; //time_frame: player: num_wins\n\nconst Leaderboard = ({\n  league,\n  weekWins,\n  monthWins,\n  allTimeWins\n}) => {\n  const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * 2)}px`;\n\n  const Header = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Leaderboard\")), /*#__PURE__*/React.createElement(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowSection, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(RowSection, {\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Wins\"))));\n\n  function makeRows() {\n    return league.leagueUsers.map(leagueUser => {\n      var _weekWins$leagueUser$;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: leagueUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(RowContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(RowSection, {\n        key: 'name',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(StandardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, leagueUser.user.firstName)), /*#__PURE__*/React.createElement(RowSection, {\n        key: 'wins',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(StandardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 28\n        }\n      }, (_weekWins$leagueUser$ = weekWins[leagueUser.id]) !== null && _weekWins$leagueUser$ !== void 0 ? _weekWins$leagueUser$ : 0))), /*#__PURE__*/React.createElement(ThinBorder, {\n        width: borderWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    height: \"400px\",\n    width: `${TABLE_WIDTH}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScrollBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ThinBorder, {\n    width: borderWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), makeRows()));\n};\n\nexport default Leaderboard;\nconst Container = styled(Card)`\n    padding-left: 8px;\n    position: relative\n`;\nconst RowContainer = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    padding-top: 8px;\n    padding-bottom: 8px;\n`;\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/Leaderboard.jsx"],"names":["React","styled","Link","Redirect","useParams","Button","H2","ScrollBox","ThinBorder","StandardText","useQuery","Card","getAllDatesWithScore","formatIgnoreTimeZone","scoreTypes","parseScore","scoreComparator","theme","format","compareAsc","parseISO","ROW_HEIGHT","COLUMN_WIDTH","TABLE_WIDTH","Leaderboard","league","weekWins","monthWins","allTimeWins","borderWidth","Math","max","Header","makeRows","leagueUsers","map","leagueUser","id","user","firstName","Container","RowContainer","div","RowSection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { H2, ScrollBox, ThinBorder } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\n\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = '200';\n//time_frame: player: num_wins\nconst Leaderboard = ({ league, weekWins, monthWins, allTimeWins}) => {\n    const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * 2)}px`; \n    const Header = () => (\n        <>\n            <RowContainer>\n                <H2>Leaderboard</H2>\n            </RowContainer>\n            <RowContainer>\n                <RowSection key='1'>\n                    <StandardText>Name</StandardText>\n                </RowSection>            \n                <RowSection key='2'>\n                    <StandardText>Wins</StandardText>\n                </RowSection>            \n            </RowContainer>\n        </>\n    );\n\n    function makeRows() {\n        return (\n            league.leagueUsers.map((leagueUser) => (\n               <React.Fragment key={leagueUser.id}> \n                    <RowContainer>\n                       <RowSection key={'name'}>\n                            <StandardText>{leagueUser.user.firstName}</StandardText>  \n                       </RowSection> \n                       <RowSection key={'wins'}>\n                           <StandardText>{weekWins[leagueUser.id] ?? 0}</StandardText>\n                       </RowSection>\n                   </RowContainer>\n                    <ThinBorder width={borderWidth}/>\n               </React.Fragment>\n                \n            ))\n        );\n    }\n    return (\n        <Container height='400px' width={`${TABLE_WIDTH}px`}>\n            <ScrollBox>\n                    <Header/>\n                    <ThinBorder width={borderWidth}/>\n                    {makeRows()}\n            </ScrollBox>\n        </Container>\n    )\n}\n\nexport default Leaderboard;\n\nconst Container = styled(Card)`\n    padding-left: 8px;\n    position: relative\n`;\n\nconst RowContainer = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    padding-top: 8px;\n    padding-bottom: 8px;\n`\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;"]},"metadata":{},"sourceType":"module"}