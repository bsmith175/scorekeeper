{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/components/LeaguePreview.jsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport Card from './shared/Card';\nimport { H2, PreviewCard, ThinBorder } from '../Util/ViewUtil';\nimport theme from '../Util/Theme';\nimport StandardText from './shared/StandardText';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst LeaguePreview = ({\n  leagueID,\n  title,\n  leaderName,\n  isNew,\n  leaderScore,\n  allTimeName,\n  allTimeScore,\n  updated\n}) => {\n  const [redirect, setRedirect] = React.useState(false);\n  console.log(leagueID);\n  return /*#__PURE__*/React.createElement(PreviewCard, {\n    onClick: () => setRedirect(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, redirect && /*#__PURE__*/React.createElement(Redirect, {\n    to: `/league/${leagueID}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 30\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(MyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, updated)), /*#__PURE__*/React.createElement(ThinBorder, {\n    margin: \"3px 0px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), isNew ? /*#__PURE__*/React.createElement(MyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 18\n    }\n  }, \"Click to add members!\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Today's leader: \", leaderName, \" \\xB7 \", leaderScore), /*#__PURE__*/React.createElement(MyText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"All-time: \", allTimeName, \" \\xB7 \", allTimeScore)));\n};\n\nconst MyText = styled(StandardText)`\n        color: ${theme.gray50};\n        margin-top: 4px;\n`;\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n`;\nexport default LeaguePreview;","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/components/LeaguePreview.jsx"],"names":["React","styled","Card","H2","PreviewCard","ThinBorder","theme","StandardText","Link","Redirect","LeaguePreview","leagueID","title","leaderName","isNew","leaderScore","allTimeName","allTimeScore","updated","redirect","setRedirect","useState","console","log","MyText","gray50","Header","div"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,SAAQC,EAAR,EAAYC,WAAZ,EAAyBC,UAAzB,QAA0C,kBAA1C;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA,WAArC;AAAkDC,EAAAA,WAAlD;AAA+DC,EAAAA,YAA/D;AAA6EC,EAAAA;AAA7E,CAAD,KAA4F;AAC9G,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BpB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AAEA,sBACQ,oBAAC,WAAD;AACA,IAAA,OAAO,EAAE,MAAMS,WAAW,CAAC,IAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGKD,QAAQ,iBAAI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,WAAUR,QAAS,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHjB,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,KADL,CADJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,OADL,CAJJ,CAJJ,eAaI,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcKJ,KAAK,gBACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADK,gBAIN,uDACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACqBD,UADrB,YACoCE,WADpC,CADJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACeC,WADf,YAC+BC,YAD/B,CAJJ,CAlBJ,CADR;AA4BF,CAhCF;;AAmCA,MAAMO,MAAM,GAAGvB,MAAM,CAACM,YAAD,CAAe;iBACnBD,KAAK,CAACmB,MAAO;;CAD9B;AAIA,MAAMC,MAAM,GAAGzB,MAAM,CAAC0B,GAAI;;;CAA1B;AAIA,eAAejB,aAAf","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport Card from './shared/Card';\nimport {H2, PreviewCard, ThinBorder} from '../Util/ViewUtil'\nimport theme from '../Util/Theme';\nimport StandardText from './shared/StandardText';\nimport { Link, Redirect } from 'react-router-dom';\n\nconst LeaguePreview = ({leagueID, title, leaderName, isNew, leaderScore, allTimeName, allTimeScore, updated }) => {\n    const [redirect, setRedirect] = React.useState(false);\n    console.log(leagueID);\n\n    return (\n            <PreviewCard \n            onClick={() => setRedirect(true)}\n            >\n                {redirect && <Redirect to={`/league/${leagueID}`}/>}\n                <Header>\n                    <H2>\n                        {title}\n                    </H2>   \n                    <MyText>\n                        {updated}\n                    </MyText>\n                </Header>\n\n                <ThinBorder margin='3px 0px'/>\n                {isNew ? \n                (<MyText>\n                    Click to add members!\n                </MyText>) :\n                <>\n                    <MyText>\n                        Today's leader: {leaderName} · {leaderScore}\n                    </MyText>\n                    <MyText>\n                        All-time: {allTimeName} · {allTimeScore}\n                    </MyText>\n                </>}\n            </PreviewCard>        \n)};\n\n\nconst MyText = styled(StandardText)`\n        color: ${theme.gray50};\n        margin-top: 4px;\n`;\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n`\nexport default LeaguePreview;\n"]},"metadata":{},"sourceType":"module"}