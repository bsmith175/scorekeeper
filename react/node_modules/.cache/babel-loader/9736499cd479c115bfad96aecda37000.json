{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/ScoreTable.jsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { H2, ScrollBox, ThinBorder, RowContainer } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = '420';\n\nconst ScoreTable = ({\n  league,\n  dateMap,\n  dates\n}) => {\n  const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * (1 + dateMap.size))}px`;\n\n  const Header = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowContainer, {\n    hover: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Scoreboard\")), /*#__PURE__*/React.createElement(RowContainer, {\n    hover: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowSection, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"Name\")), dates.map(date => {\n    return /*#__PURE__*/React.createElement(RowSection, {\n      key: date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StandardText, {\n      color: theme.gray50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, formatIgnoreTimeZone(parseISO(date), 'MMM d')));\n  })));\n\n  function makeUserRows() {\n    return league.leagueUsers.map(leagueUser => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: leagueUser.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(RowContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(RowSection, {\n      key: 'name',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(StandardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, leagueUser.user.firstName)), dates.map(date => {\n      var _parseScore, _dateMap$get$get;\n\n      return /*#__PURE__*/React.createElement(RowSection, {\n        key: date,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(StandardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 33\n        }\n      }, (_parseScore = parseScore((_dateMap$get$get = dateMap.get(date).get(leagueUser.id)) === null || _dateMap$get$get === void 0 ? void 0 : _dateMap$get$get.value)) !== null && _parseScore !== void 0 ? _parseScore : '--'));\n    })), /*#__PURE__*/React.createElement(ThinBorder, {\n      width: borderWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })));\n  }\n\n  return dateMap && /*#__PURE__*/React.createElement(Container, {\n    height: \"900px\",\n    width: `${TABLE_WIDTH}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScrollBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ThinBorder, {\n    width: borderWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), makeUserRows()));\n};\n\nexport default ScoreTable;\nconst Container = styled(Card)`\n    position: relative\n`;\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/ScoreTable.jsx"],"names":["React","styled","Link","Redirect","useParams","Button","H2","ScrollBox","ThinBorder","RowContainer","StandardText","useQuery","Card","getAllDatesWithScore","formatIgnoreTimeZone","scoreTypes","parseScore","scoreComparator","theme","format","compareAsc","parseISO","ROW_HEIGHT","COLUMN_WIDTH","TABLE_WIDTH","ScoreTable","league","dateMap","dates","borderWidth","Math","max","size","Header","map","date","gray50","makeUserRows","leagueUsers","leagueUser","id","user","firstName","get","value","Container","RowSection","div"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { H2, ScrollBox, ThinBorder, RowContainer } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\n\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = '420';\nconst ScoreTable = ({ league, dateMap, dates }) => {\n    const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * (1 + dateMap.size))}px`; \n    const Header = () => (\n        <>\n            <RowContainer hover={false}>\n                <H2>Scoreboard</H2>\n            </RowContainer>\n            <RowContainer hover={false}>\n                <RowSection key='1'>\n                    <StandardText>Name</StandardText>\n                </RowSection>            \n                {dates.map((date) => {\n                    return (\n                    <RowSection key={date}>\n                        <StandardText color={theme.gray50}>{formatIgnoreTimeZone(parseISO(date), 'MMM d')}</StandardText>\n                    </RowSection>)\n                })}\n            </RowContainer>\n        </>\n    );\n\n    function makeUserRows() {\n        return (\n            league.leagueUsers.map((leagueUser) => (\n               <React.Fragment key={leagueUser.id}> \n                    <RowContainer>\n                       <RowSection key={'name'}>\n                            <StandardText>{leagueUser.user.firstName}</StandardText>  \n                       </RowSection> \n                    {dates.map((date) => {\n                        return (\n                            <RowSection key={date}>\n                                <StandardText>{parseScore(dateMap.get(date).get(leagueUser.id)?.value) ?? '--'}</StandardText>\n                            </RowSection>\n                        )\n                   })}\n                   </RowContainer>\n                    <ThinBorder width={borderWidth}/>\n               </React.Fragment>\n            ))\n        )\n    }\n    return (dateMap &&\n        <Container height='900px' width={`${TABLE_WIDTH}px`}>\n            <ScrollBox>\n                    <Header/>\n                    <ThinBorder width={borderWidth}/>\n                    {makeUserRows()}\n            </ScrollBox>\n        </Container>\n    )\n}\n\nexport default ScoreTable;\n\nconst Container = styled(Card)`\n    position: relative\n`;\n\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;"]},"metadata":{},"sourceType":"module"}