{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/App.js\";\nimport * as React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route } from 'react-router-dom';\nimport { ImplicitCallback } from '@okta/okta-react';\nimport { H2 } from './Util/ViewUtil';\nimport LeaguePage from './views/League/LeaguePage';\nimport AppHeader from './components/AppHeader';\nimport useQuery from './components/Hooks/useQuery';\nimport PreviewDisplay from './views/PreviewDisplay';\n\nconst App = () => {\n  const {\n    data,\n    loading,\n    error,\n    reQuery\n  } = useQuery('/leagues');\n\n  function renderPreviewDisplay() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(H2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }, \"Error\");\n    }\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(H2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 14\n        }\n      }, \"Loading\");\n    }\n\n    return data && /*#__PURE__*/React.createElement(PreviewDisplay, {\n      data: data,\n      getData: () => reQuery(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    });\n  }\n\n  async function renderLeaguePage(props) {\n    (props === null || props === void 0 ? void 0 : props.refresh) && (await reQuery);\n    return data !== null && data !== void 0 ? data : /*#__PURE__*/React.createElement(LeaguePage, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'inline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: renderPreviewDisplay,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/league/:id\",\n    component: renderLeaguePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/implicit/callback\",\n    component: ImplicitCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default App;\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`;","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/App.js"],"names":["React","createGlobalStyle","Route","ImplicitCallback","H2","LeaguePage","AppHeader","useQuery","PreviewDisplay","App","data","loading","error","reQuery","renderPreviewDisplay","renderLeaguePage","props","refresh","display","GlobalStyle"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAEhB,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAkCN,QAAQ,CAAC,UAAD,CAAhD;;AAEA,WAASO,oBAAT,GAAgC;AAE9B,QAAIF,KAAJ,EAAW;AACT,0BAAO,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACD;;AACD,QAAID,OAAJ,EAAa;AACX,0BAAO,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AACD,WAAOD,IAAI,iBAAI,oBAAC,cAAD;AAAgB,MAAA,IAAI,EAAEA,IAAtB;AAA4B,MAAA,OAAO,EAAE,MAAMG,OAAO,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACD;;AAED,iBAAeE,gBAAf,CAAgCC,KAAhC,EAAuC;AACrC,KAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,OAAP,MAAkB,MAAMJ,OAAxB;AACA,WAAOH,IAAP,aAAOA,IAAP,cAAOA,IAAP,gBAAe,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEA,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACD;;AAED,sBAAQ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACN,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,eAEN;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,OAAO,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,MAAM,EAAEJ,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,aAAlB;AAAgC,IAAA,SAAS,EAAEC,gBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,oBAAZ;AAAiC,IAAA,SAAS,EAAEZ,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAFM,CAAR;AASD,CA7BD;;AA+BA,eAAgBM,GAAhB;AAEA,MAAMU,WAAW,GAAGlB,iBAAkB;;;;;CAAtC","sourcesContent":["import * as React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { Route } from 'react-router-dom';\nimport { ImplicitCallback } from '@okta/okta-react';\nimport { H2 } from './Util/ViewUtil';\nimport LeaguePage from './views/League/LeaguePage';\nimport AppHeader from './components/AppHeader';\nimport useQuery from './components/Hooks/useQuery';\nimport PreviewDisplay from './views/PreviewDisplay';\n\nconst App = () => {\n\n  const {data, loading, error, reQuery} = useQuery('/leagues');\n\n  function renderPreviewDisplay() {\n\n    if (error) {\n      return <H2>Error</H2>;\n    }\n    if (loading) {\n      return <H2>Loading</H2>;\n    }\n    return data && <PreviewDisplay data={data} getData={() => reQuery()}/>\n  }\n\n  async function renderLeaguePage(props) {\n    props?.refresh && await reQuery;\n    return data ?? <LeaguePage data={data}/>;\n  }\n\n  return (<React.Fragment>\n    <GlobalStyle/>\n    <div style={{display: 'inline'}}>\n      <AppHeader />\n      <Route exact path=\"/\" render={renderPreviewDisplay} />\n      <Route exact path=\"/league/:id\" component={renderLeaguePage} />\n      <Route path=\"/implicit/callback\" component={ImplicitCallback} />\n    </div>\n  </React.Fragment>)\n};\n\nexport default (App);\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n  }\n`;"]},"metadata":{},"sourceType":"module"}