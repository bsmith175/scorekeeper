{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/Leaderboard.jsx\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { ButtonText, H2, ScrollBox, ThinBorder } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\nimport withHover from '../../components/HOCs/withHover';\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = COLUMN_WIDTH * 3; //time_frame: player: num_wins\n\nconst Leaderboard = ({\n  league,\n  weekWins,\n  monthWins,\n  allTimeWins\n}) => {\n  // const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * 2)}px`; \n  const [buttonText, setButtonText] = React.useState('This Week');\n  const [showDropdown, setShowDropdown] = React.useState(false);\n\n  const Header = () => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Leaderboard\"), /*#__PURE__*/React.createElement(TimePeriodContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TimePeriodButton, {\n    onClick: () => setShowDropdown(!showDropdown),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, buttonText), showDropdown && /*#__PURE__*/React.createElement(Dropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(RowContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowSection, {\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Name\")), /*#__PURE__*/React.createElement(RowSection, {\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Wins\"))));\n\n  function makeRows() {\n    return league.leagueUsers.map(leagueUser => {\n      var _weekWins$leagueUser$;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: leagueUser.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      }, /*#__PURE__*/React.createElement(RowContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(RowSection, {\n        key: 'name',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(StandardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }, leagueUser.user.firstName)), /*#__PURE__*/React.createElement(RowSection, {\n        key: 'wins',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(StandardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 28\n        }\n      }, (_weekWins$leagueUser$ = weekWins[leagueUser.id]) !== null && _weekWins$leagueUser$ !== void 0 ? _weekWins$leagueUser$ : 0))), /*#__PURE__*/React.createElement(ThinBorder, {\n        width: TABLE_WIDTH,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }));\n    });\n  }\n\n  console.log(league.leagueUsers.length);\n  return /*#__PURE__*/React.createElement(Container, {\n    height: \"400px\",\n    width: `${TABLE_WIDTH}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ScrollBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ThinBorder, {\n    width: TABLE_WIDTH,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), makeRows()));\n};\n\nexport default Leaderboard;\n\nconst TimePeriodButtonBase = props => {\n  const {\n    hover,\n    clicked,\n    onClick\n  } = props;\n  const [isSelected, setIsSelected] = React.useState(false);\n  return /*#__PURE__*/React.createElement(DropDownButton, {\n    onClick: onClick,\n    height: \"20px\",\n    hover: hover,\n    selected: clicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonText, {\n    color: hover ? 'black' : theme.gray50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, props.children));\n};\n\nconst Dropdown = props => {\n  return /*#__PURE__*/React.createElement(DropdownContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SelectRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"asdf\")), /*#__PURE__*/React.createElement(SelectRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"asdf\")), /*#__PURE__*/React.createElement(SelectRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StandardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"asdf\")));\n};\n\nconst TimePeriodButton = withHover(TimePeriodButtonBase);\nconst DropDownButton = styled.div`\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n    background-color: ${p => p.hover || p.selected ? theme.lightGray : 'transparent'};\n    padding: 4px 8px;\n    height: ${p => p.height};\n    width: ${p => p.width};\n`;\nconst Container = styled(Card)`\n    padding-left: 8px;\n    position: relative\n`;\nconst RowContainer = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    justify-content: space-between;\n    padding-top: 8px;\n    padding-bottom: 8px;\n`;\nconst SelectRowBase = styled.div`\n    padding: 4px 8px;\n    border-bottom: 1px solid ${theme.lightGray};\n`;\nconst SelectRow = withHover(SelectRowBase);\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;\nconst TimePeriodContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    padding-right: 8px;\n`;\nconst DropdownContainer = styled(Card)`\n    background: white;\n    z-index: 4;\n\n`;","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/views/League/Leaderboard.jsx"],"names":["React","styled","Link","Redirect","useParams","Button","ButtonText","H2","ScrollBox","ThinBorder","StandardText","useQuery","Card","getAllDatesWithScore","formatIgnoreTimeZone","scoreTypes","parseScore","scoreComparator","theme","format","compareAsc","parseISO","withHover","ROW_HEIGHT","COLUMN_WIDTH","TABLE_WIDTH","Leaderboard","league","weekWins","monthWins","allTimeWins","buttonText","setButtonText","useState","showDropdown","setShowDropdown","Header","makeRows","leagueUsers","map","leagueUser","id","user","firstName","console","log","length","TimePeriodButtonBase","props","hover","clicked","onClick","isSelected","setIsSelected","gray50","children","Dropdown","TimePeriodButton","DropDownButton","div","p","selected","lightGray","height","width","Container","RowContainer","SelectRowBase","SelectRow","RowSection","TimePeriodContainer","DropdownContainer"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport { ButtonText, H2, ScrollBox, ThinBorder } from '../../Util/ViewUtil';\nimport StandardText from '../../components/shared/StandardText';\nimport useQuery from '../../components/Hooks/useQuery';\nimport Card from '../../components/shared/Card';\nimport { getAllDatesWithScore, formatIgnoreTimeZone, scoreTypes, parseScore, scoreComparator } from '../../Util/Util';\nimport theme from '../../Util/Theme';\nimport { format, compareAsc } from 'date-fns';\nimport { parseISO } from 'date-fns/esm';\nimport withHover from '../../components/HOCs/withHover';\n\nconst ROW_HEIGHT = '20';\nconst COLUMN_WIDTH = '90';\nconst TABLE_WIDTH = COLUMN_WIDTH * 3;\n//time_frame: player: num_wins\nconst Leaderboard = ({ league, weekWins, monthWins, allTimeWins}) => {\n    // const borderWidth = `${Math.max(TABLE_WIDTH, COLUMN_WIDTH * 2)}px`; \n    const [buttonText, setButtonText] = React.useState('This Week');\n    const [showDropdown, setShowDropdown] = React.useState(false)\n    const Header = () => (\n        <>\n            <RowContainer>\n                <H2>Leaderboard</H2>\n                <TimePeriodContainer>\n                    <TimePeriodButton onClick={() => setShowDropdown(!showDropdown)}>\n                        {buttonText}\n                    </TimePeriodButton>\n                    {showDropdown &&(\n                        <Dropdown/>\n                    )}\n                </TimePeriodContainer>\n            </RowContainer>\n            <RowContainer>\n                <RowSection key='1'>\n                    <StandardText>Name</StandardText>\n                </RowSection>            \n                <RowSection key='2'>\n                    <StandardText>Wins</StandardText>\n                </RowSection>            \n            </RowContainer>\n        </>\n    );\n\n    function makeRows() {\n        return (\n            league.leagueUsers.map((leagueUser) => (\n               <React.Fragment key={leagueUser.id}> \n                    <RowContainer>\n                       <RowSection key={'name'}>\n                            <StandardText>{leagueUser.user.firstName}</StandardText>  \n                       </RowSection> \n                       <RowSection key={'wins'}>\n                           <StandardText>{weekWins[leagueUser.id] ?? 0}</StandardText>\n                       </RowSection>\n                   </RowContainer>\n                    <ThinBorder width={TABLE_WIDTH}/>\n               </React.Fragment>\n                \n            ))\n        );\n    }\n    console.log(league.leagueUsers.length)\n    return (\n        <Container height='400px' width={`${TABLE_WIDTH}px`}>\n        {/* <Container height={`${ROW_HEIGHT * 2 * league.leagueUsers.length + 60}px`} width={`${TABLE_WIDTH}px`}> */}\n            <ScrollBox>\n                    <Header/>\n                    <ThinBorder width={TABLE_WIDTH}/>\n                    {makeRows()}\n            </ScrollBox>\n        </Container>\n    )\n}\n\nexport default Leaderboard;\n\nconst TimePeriodButtonBase = (props) => {\n    const {hover, clicked, onClick} = props;\n    const [isSelected, setIsSelected] = React.useState(false);\n    return (\n        <DropDownButton onClick={onClick} height='20px'  hover={hover} selected={clicked}>\n            <ButtonText color={hover ? 'black' : theme.gray50}>{props.children}</ButtonText>\n        </DropDownButton>\n    )\n}\nconst Dropdown = (props) => {\n    return (\n        <DropdownContainer>\n            <SelectRow>\n                <StandardText>asdf</StandardText>\n            </SelectRow>\n            <SelectRow>\n                <StandardText>asdf</StandardText>\n            </SelectRow>\n            <SelectRow>\n                <StandardText>asdf</StandardText>\n            </SelectRow>\n\n        </DropdownContainer>\n    );\n}\nconst TimePeriodButton = withHover(TimePeriodButtonBase);\nconst DropDownButton = styled.div`\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n    background-color: ${p => p.hover || p.selected ? theme.lightGray : 'transparent'};\n    padding: 4px 8px;\n    height: ${p => p.height};\n    width: ${p => p.width};\n`;\nconst Container = styled(Card)`\n    padding-left: 8px;\n    position: relative\n`;\n\nconst RowContainer = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    justify-content: space-between;\n    padding-top: 8px;\n    padding-bottom: 8px;\n`;\nconst SelectRowBase = styled.div`\n    padding: 4px 8px;\n    border-bottom: 1px solid ${theme.lightGray};\n`;\nconst SelectRow = withHover(SelectRowBase);\nconst RowSection = styled.div`\n   min-width: ${COLUMN_WIDTH}px;\n\n`;\nconst TimePeriodContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    padding-right: 8px;\n`;\n\nconst DropdownContainer = styled(Card)`\n    background: white;\n    z-index: 4;\n\n`"]},"metadata":{},"sourceType":"module"}