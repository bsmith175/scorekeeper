{"ast":null,"code":"var _jsxFileName = \"/Users/bensmith/workspace/projects/crossword-league/react/src/Util/ViewUtil.jsx\";\nimport * as React from 'react';\nimport withHover from '../components/HOCs/withHover';\nimport styled from 'styled-components';\nimport StandardText from '../components/shared/StandardText';\nimport Card from '../components/shared/Card';\nimport theme from './Theme';\nconst ROW_HEIGHT = '20';\nexport const H1 = styled(StandardText)`\n    font-size: 30px;\n    font-weight: 630;\n    color: ${p => p.color};\n`;\nexport const H2 = styled(StandardText)`\n    font-size: 24px;\n    font-weight: 400;\n    color: ${p => p.color};\n`;\nexport const ButtonText = styled(StandardText)`\n    font-size: 14px;\n    font-weight: 600;\n`;\nexport const ScrollBox = styled.div`\n    overflow: scroll;\n    height: ${p => p.height};\n    min-height: ${p => p.min_height};\n    width: ${p => p.width};\n    display: flex;\n    flex-direction: column;\n    \n`;\nconst PreviewCardInternal = styled(Card)`\n    width: 300px;\n    padding: 8px;\n    background-color: ${p => p.hover ? theme.lightGray : 'transparent'};\n    cursor: pointer;\n\n`;\nexport const ThinBorder = styled.div`\n    border-style: solid;\n    border-bottom-width: 1px;\n    border-top-width: 0px;\n    border-color: ${theme.gray30};\n    margin: ${p => {\n  var _p$margin;\n\n  return (_p$margin = p.margin) !== null && _p$margin !== void 0 ? _p$margin : 0;\n}};\n    width: ${p => p.width ? p.width : null};\n`;\nexport const ButtonContainer = styled.div`\n    margin: 8px;\n    width: 200px;\n`;\nexport const PreviewCard = withHover(PreviewCardInternal);\nconst RowContainerInternal = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    justify-content: space-between;\n    width: max-content;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    background-color: ${p => p.hover ? theme.lightGray : 'transparent'};\n`;\n\nconst RowContainerBase = props => {\n  if (props.zIndex != undefined) {\n    props.setZIndex(props.zIndex);\n  }\n\n  return /*#__PURE__*/React.createElement(RowContainerInternal, Object.assign({\n    hover: props.hover\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }\n  }));\n};\n\nexport const RowContainer = withHover(RowContainerBase);","map":{"version":3,"sources":["/Users/bensmith/workspace/projects/crossword-league/react/src/Util/ViewUtil.jsx"],"names":["React","withHover","styled","StandardText","Card","theme","ROW_HEIGHT","H1","p","color","H2","ButtonText","ScrollBox","div","height","min_height","width","PreviewCardInternal","hover","lightGray","ThinBorder","gray30","margin","ButtonContainer","PreviewCard","RowContainerInternal","RowContainerBase","props","zIndex","undefined","setZIndex","RowContainer"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,UAAU,GAAG,IAAnB;AAEA,OAAO,MAAMC,EAAE,GAAGL,MAAM,CAACC,YAAD,CAAe;;;aAG1BK,CAAC,IAAIA,CAAC,CAACC,KAAM;CAHnB;AAMP,OAAO,MAAMC,EAAE,GAAGR,MAAM,CAACC,YAAD,CAAe;;;aAG1BK,CAAC,IAAIA,CAAC,CAACC,KAAM;CAHnB;AAKP,OAAO,MAAME,UAAU,GAAGT,MAAM,CAACC,YAAD,CAAe;;;CAAxC;AAKP,OAAO,MAAMS,SAAS,GAAGV,MAAM,CAACW,GAAI;;cAEtBL,CAAC,IAAIA,CAAC,CAACM,MAAO;kBACVN,CAAC,IAAIA,CAAC,CAACO,UAAW;aACvBP,CAAC,IAAIA,CAAC,CAACQ,KAAM;;;;CAJnB;AASP,MAAMC,mBAAmB,GAAGf,MAAM,CAACE,IAAD,CAAO;;;wBAGjBI,CAAC,IAAIA,CAAC,CAACU,KAAF,GAAUb,KAAK,CAACc,SAAhB,GAA4B,aAAc;;;CAHvE;AAQA,OAAO,MAAMC,UAAU,GAAGlB,MAAM,CAACW,GAAI;;;;oBAIjBR,KAAK,CAACgB,MAAO;cACnBb,CAAC;AAAA;;AAAA,sBAAIA,CAAC,CAACc,MAAN,iDAAgB,CAAhB;AAAA,CAAkB;aACpBd,CAAC,IAAIA,CAAC,CAACQ,KAAF,GAAUR,CAAC,CAACQ,KAAZ,GAAoB,IAAK;CANpC;AASP,OAAO,MAAMO,eAAe,GAAGrB,MAAM,CAACW,GAAI;;;CAAnC;AAIP,OAAO,MAAMW,WAAW,GAAGvB,SAAS,CAACgB,mBAAD,CAA7B;AAEP,MAAMQ,oBAAoB,GAAGvB,MAAM,CAACW,GAAI;cAC1BP,UAAW;;;;;;;;;;;wBAWDE,CAAC,IAAIA,CAAC,CAACU,KAAF,GAAUb,KAAK,CAACc,SAAhB,GAA4B,aAAc;CAZvE;;AAcA,MAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAChC,MAAIA,KAAK,CAACC,MAAN,IAAgBC,SAApB,EAA+B;AAC3BF,IAAAA,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACC,MAAtB;AACH;;AACD,sBAAO,oBAAC,oBAAD;AAAsB,IAAA,KAAK,EAAED,KAAK,CAACT;AAAnC,KAA8CS,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACH,CALD;;AAOA,OAAO,MAAMI,YAAY,GAAG9B,SAAS,CAACyB,gBAAD,CAA9B","sourcesContent":["import * as React from 'react';\nimport withHover from '../components/HOCs/withHover';\nimport styled from 'styled-components';\nimport StandardText from '../components/shared/StandardText';\nimport Card from '../components/shared/Card';\nimport theme from './Theme';\n\nconst ROW_HEIGHT = '20';\n\nexport const H1 = styled(StandardText)`\n    font-size: 30px;\n    font-weight: 630;\n    color: ${p => p.color};\n`;\n\nexport const H2 = styled(StandardText)`\n    font-size: 24px;\n    font-weight: 400;\n    color: ${p => p.color};\n`;\nexport const ButtonText = styled(StandardText)`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nexport const ScrollBox = styled.div`\n    overflow: scroll;\n    height: ${p => p.height};\n    min-height: ${p => p.min_height};\n    width: ${p => p.width};\n    display: flex;\n    flex-direction: column;\n    \n`;\nconst PreviewCardInternal = styled(Card)`\n    width: 300px;\n    padding: 8px;\n    background-color: ${p => p.hover ? theme.lightGray : 'transparent'};\n    cursor: pointer;\n\n`;\n\nexport const ThinBorder = styled.div`\n    border-style: solid;\n    border-bottom-width: 1px;\n    border-top-width: 0px;\n    border-color: ${theme.gray30};\n    margin: ${p => p.margin ?? 0};\n    width: ${p => p.width ? p.width : null};\n`;\n\nexport const ButtonContainer = styled.div`\n    margin: 8px;\n    width: 200px;\n`;\nexport const PreviewCard = withHover(PreviewCardInternal);\n\nconst RowContainerInternal = styled.div`\n    height: ${ROW_HEIGHT}px;\n    position: relative;\n    left: 0;\n    right: 0;\n    display: flex;\n    flex: 0 0 auto;\n    justify-content: space-between;\n    width: max-content;\n    padding-left: 8px;\n    padding-top: 8px;\n    padding-bottom: 8px;\n    background-color: ${p => p.hover ? theme.lightGray : 'transparent'};\n`;\nconst RowContainerBase = (props) => {\n    if (props.zIndex != undefined) {\n        props.setZIndex(props.zIndex)\n    }\n    return <RowContainerInternal hover={props.hover} {...props}/>\n}\n\nexport const RowContainer = withHover(RowContainerBase);\n"]},"metadata":{},"sourceType":"module"}